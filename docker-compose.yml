services:
  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    restart: unless-stopped

  book-service:
    build:
      context: ./BookService
      dockerfile: Dockerfile
    container_name: book-service
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - JWT_SECRET=${JWT_SECRET}
    restart: unless-stopped

  recommendation-service:
    build:
      context: ./RecommendationService
      dockerfile: Dockerfile
    container_name: recommendation-service
    ports:
      - "8001:8001"
    environment:
      - JWT_SECRET=${JWT_SECRET}
    restart: unless-stopped

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production
      - MONGO_URL=${MONGO_URL_USER}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=https://user-service/
    depends_on:
      - mongo
    restart: unless-stopped

  loan-service:
    build:
      context: ./loan-service
      dockerfile: Dockerfile
    container_name: loan-service
    ports:
      - "5002:5002"
    environment:
      - NODE_ENV=production
      - MONGO_URL=${MONGO_URL_LOAN}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongo
    restart: unless-stopped

  review-service:
    build:
      context: ./review-service
      dockerfile: Dockerfile
    container_name: review-service
    ports:
      - "5003:5003"
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - MONGO_URL=${MONGO_URL_REVIEW}
    depends_on:
      - mongo
      - book-service
      - loan-service
    restart: unless-stopped

  statistics-service:
    build:
      context: ./statistics-service
      dockerfile: Dockerfile
    container_name: statistics-service
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - MONGO_URL=${MONGO_URL_REVIEW}
      - REVIEW_SERVICE_URL=http://review-service:5003
      - USER_SERVICE_URL=http://user-service:5001
    depends_on:
      - mongo
      - review-service
    restart: unless-stopped

  graphql-service:
    build:
      context: ./graphql-service
      dockerfile: Dockerfile
    container_name: graphql-service
    ports:
      - "4001:4001"
    environment:
      - NODE_ENV=production
      - PORT=4001
      - USER_SERVICE_URL=http://user-service:5001
      - BOOK_SERVICE_URL=http://book-service:8000
      - REVIEW_SERVICE_URL=http://review-service:5003
      - STATISTICS_SERVICE_URL=http://statistics-service:8080
    depends_on:
      - user-service
      - book-service
      - review-service
      - statistics-service
    restart: unless-stopped
